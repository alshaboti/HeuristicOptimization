4-5
clear
help
mydata$sum <- mydata$x1 + mydata$x2
install.packages("plotrix")
install.packages(​"http://www.bnlearn.com/releases/​bnlearn_latest.tar.gz")
install.packages(​"http://www.bnlearn.com/releases/​bnlearn_latest.tar.gz")
cls
clear
mstring <- "hellow world"
print(mystring)
print(mstring)
BMI <- data.frame(
   gender = c("Male", "Male","Female"), 
   height = c(152, 171.5, 165), 
   weight = c(81,93, 78),
   Age = c(42,38,26)
)
print(BMI)
install.packages("bnlearn")
install.packages("plotrix")
qquit
quit
quite
quit
demo()
demo()
demo()
help()
data(coronary)
bn_df <- data.frame(coronary)
library(bnlearn)
bn_df <- data.frame(coronary)
res <- hc(bn_df)
plot(res)
plot(res)
fitteddbn <- bn.fit(res, data = bn_df)
print(fittedbn$Proteins)
print(fitteddbn$Proteins)
data(learning.test)
## discrete Bayesian network (it is the same with ordinal nodes).
data(learning.test)
fitted = bn.fit(hc(learning.test), learning.test)
# the result should be around 0.025.
plot(fitted)
cpquery(fitted, (B == "b"), (A == "a"))
cpquery(fitted, event = ((B == "b")& (A == "a")))
cpquery(fitted, event = ((B == "b")& (A == "a")), evidence=())
cpquery(fitted, (B == "b"), (A == "a"))
cpquery(fitted, event=(B == "b"), evidence=(A == "a"))
cpquery(fitted, (B == "b"), (A == "a"))
cpquery(fitted, (B == "b"), (A == "a"))
cpquery(fitted, event=(B == "b"), evidence=(A == "a"))
cpquery(fitted, (B == "b"), (A == "a"))
cpquery(fitted, (B == "b"), (A == "a"))
cpquery(fitted, (), (A == "a"))
x = 4
print(x)
var_x <- "Hello"
cat("The class of var_x is ",class(var_x),"\n")
var_x <- 34.5
cat("  Now the class of var_x is ",class(var_x),"\n")
var_x <- 27L
cat("   Next the class of var_x becomes ",class(var_x),"\n")
pirnt(ls())
print(ls())
ثءهف
exit
quit()
